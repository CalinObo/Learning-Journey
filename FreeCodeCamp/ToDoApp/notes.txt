{   Now, you will work on opening and closing the form modal.

    In earlier projects, you learned how to add and remove classes from an element with el.classList.add() and el.classList.remove().
    Another method to use with the classList property is the toggle method.

    The toggle method will add the class if it is not present on the element, and remove the class if it is present on the element.

    element.classList.toggle("class-to-toggle");
    Add an event listener to the openTaskFormBtn element and pass in a click event for the first argument and an empty callback function for the second argument.

    For the callback function, use the classList.toggle() method to toggle the hidden class on the taskForm element.

    Now you can click on the "Add new Task" button and see the form modal.
}

{
    The HTML dialog element has a showModal() method that can be used to display a modal dialog box on a web page.

    dialogElement.showModal();
}

{
    The findIndex() array method finds and returns the index of the first element in an array that meets the criteria specified by a provided testing function. If no such element is found, the method returns -1.

    Here's an example:

    const numbers = [3, 1, 5, 6];
    const firstNumLargerThanThree = numbers.findIndex((num) => num > 3);

    console.log(firstNumLargerThanThree); // prints index 2
}

{
    Date.now() returns the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC.

    console.log(Date.now()); // 1628586800000
}

{
    Date.now() returns the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC.
}

{
    unshift() is an array method that is used to add one or more elements to the beginning of an array.
}

{   
     this is a keyword that refers to the current context. In this case, this points to the element that triggers the event â€“ the buttons. 
}

{
    splice() is an array method that modifies arrays by removing, replacing, or adding elements at a specified index, while also returning the removed elements. 
    It can take up to three arguments: the first one is the mandatory index at which to start, the second is the number of items to remove, and the third is an optional replacement element. Here's an example:

    const fruits = ["mango", "date", "cherry", "banana", "apple"];

    // Remove date and cherry from the array starting at index 1
    const removedFruits = fruits.splice(1, 2);

    console.log(fruits); // [ 'mango', 'banana', 'apple' ]
    console.log(removedFruits); // [ 'date', 'cherry' ]
}

{
    localStorage offers methods for saving, retrieving, and deleting items. The items you save can be of any JavaScript data type.

    For instance, the setItem() method is used to save an item, and the getItem() method retrieves the item. To delete a specific item, you can utilize the removeItem() method, or if you want to delete all items in the storage, you can use clear().

    Here's how you can save an item:

    localStorage.setItem("key", value); // value could be string, number, or any other data type
}

{

    const myTaskArr = [
  { task: "Walk the Dog", date: "22-04-2022" },
  { task: "Read some books", date: "02-11-2023" },
  { task: "Watch football", date: "10-08-2021" },
    ];

    localStorage.setItem("data", JSON.stringify(myTaskArr));

    localStorage.clear();

    const getTaskArr = localStorage.getItem("data")
    console.log(getTaskArr)

    const getTaskArrObj = JSON.parse(localStorage.getItem("data"));
    console.log(getTaskArrObj);
}