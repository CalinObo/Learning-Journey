What are the four CSS maths functions we covered above?

The four functions we covered are calc(), min(), max(), clamp().

How do we use CSS math functions in our CSS?

As in other programming languages, functions are reusable pieces of code which perform specific tasks. Functions are
passed "arguments" between parentheses, each of which is used by the function in a specific way. Some common examples are:

color: rgb(0,42,255);
background: linear-gradient(90deg,blue,red);

Here, the value of color is the function rgb(), which accepts arguments in the form of numbers. It processes those numbers to calculate the rgb color
corresponding to the three values given. Similarly, the background property has a valuea of linear-gradient(90deg, blue, red).
linear-gradient generates a gradient image using the parameters it`s been given. It needs at least two color arguments
:colors to transition between. Additionally, you can set the angle of direction of the gradient line( like we`ve done in the example),
add more color values, etc.

Unlike other programming languages we`ll use, CSS does not allow us to create our own functions. Instead, the language comes bundled with a list of
premade functions that will help you sove the most common styling problems.

Besides defining color, there are several CSS functions that are useful when designing a website`s layout and sizing.
These become important when thinking about responsive design.

How can CSS functions help make websites and applications more responsive?

They are useful when we want to make either the website or the app more responsive, I believe it`s better to use functions rather than media queries.
The clamp function is very useful since it has a minimum value, the ideal value and the maximum value. Other useful functions are the min and max, we get to set the values
the element we are applying it onto should get.